package com.zhongjia.subtitlefusion.ffmpeg.ass;

import com.zhongjia.subtitlefusion.config.AppProperties;
import com.zhongjia.subtitlefusion.model.SubtitleFusionV2Request;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;

/**
 * 负责将 V2 请求转换为 ASS 字幕文件。
 */
@Component
public class AssSubtitleFileBuilder {

    @Autowired
    private AppProperties props;
    @Autowired
    private AssEffectStrategyResolver strategyResolver;

    public Path buildAssFile(SubtitleFusionV2Request.SubtitleInfo subtitleInfo, Path videoPath) throws Exception {
        if (subtitleInfo == null || subtitleInfo.getCommonSubtitleInfoList() == null || subtitleInfo.getCommonSubtitleInfoList().isEmpty()) {
            return null;
        }

        String fontFamily = props.getRender() != null && props.getRender().getFontFamily() != null
                ? props.getRender().getFontFamily()
                : "Microsoft YaHei";
        // 默认缩小到 28，并支持通过配置覆盖
        int baseDefault = 28;
        int baseFontSize = baseDefault;
        if (props.getRender() != null) {
            Integer fontSizePx = props.getRender().getFontSizePx();
            Float fontScale = props.getRender().getFontScale();
            Integer minFontSizePx = props.getRender().getMinFontSizePx();
            if (fontSizePx != null && fontSizePx > 0) {
                baseFontSize = fontSizePx;
            } else if (fontScale != null && fontScale > 0f) {
                baseFontSize = Math.round(baseDefault * fontScale);
            }
            if (minFontSizePx != null && minFontSizePx > 0) {
                baseFontSize = Math.max(baseFontSize, minFontSizePx);
            }
        }

        List<String> lines = new ArrayList<>();
        // Header
        lines.add("[Script Info]");
        lines.add("; Script generated by subtitle-fusion");
        lines.add("ScriptType: v4.00+");
        lines.add("WrapStyle: 2");
        lines.add("ScaledBorderAndShadow: yes");
        // 固定脚本分辨率，便于字号与视频建立稳定映射（后续可改为探测实际分辨率）
        int playX = 1920;
        int playY = 1080;
        try {
            if (videoPath != null) {
                int[] wh = com.zhongjia.subtitlefusion.util.MediaProbeUtils.probeVideoResolution(videoPath);
                playX = wh[0]; playY = wh[1];
            }
        } catch (Exception ignore) {}
        lines.add("PlayResX: " + playX);
        lines.add("PlayResY: " + playY);
        lines.add("");

        // Styles（一个基础样式）
        lines.add("[V4+ Styles]");
        lines.add("Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding");
        lines.add("Style: Default," + fontFamily + "," + baseFontSize + ",&H00FFFFFF,&H0000FFFF,&H00000000,&H64000000,0,0,0,0,100,100,0,0,1,2,1,2,20,20,30,1");
        lines.add("");

        // Events
        lines.add("[Events]");
        lines.add("Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text");

        for (SubtitleFusionV2Request.CommonSubtitleInfo line : subtitleInfo.getCommonSubtitleInfoList()) {
            AssEffectStrategy strategy = strategyResolver.resolve(line);
            String overrideTags = strategy.buildOverrideTags(line);
            String text = strategy.rewriteTextWithKeywords(line);

            String start = normalizeToAssTime(line.getStartTime());
            String end = normalizeToAssTime(line.getEndTime());
            String dialogue = "Dialogue: 0," + start + "," + end + ",Default,,0000,0000,0000,,{" + overrideTags + "}" + escapeAssText(text);
            lines.add(dialogue);
        }

        String ts = LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyyMMdd_HHmmss"));
        Path tempDir = Paths.get(System.getProperty("java.io.tmpdir"), "subtitle-fusion");
        Files.createDirectories(tempDir);
        Path assPath = tempDir.resolve("subtitle_" + ts + ".ass");
        Files.write(assPath, String.join("\n", lines).getBytes(StandardCharsets.UTF_8));
        return assPath;
    }

    private String escapeAssText(String s) {
        if (s == null) return "";
        // 基础转义：将换行替换为 \N
        return s.replace("\n", "\\N");
    }

    private String normalizeToAssTime(String t) {
        // 支持 "00:00:01.000" / "00:00:01,000" / 秒数 字符串
        if (t == null || t.isEmpty()) return "0:00:00.00";
        String s = t.trim();
        if (s.matches("^\\d+(\\.\\d+)?$")) {
            // 纯秒
            double sec = Double.parseDouble(s);
            int h = (int) (sec / 3600);
            int m = (int) ((sec % 3600) / 60);
            double r = sec % 60;
            return String.format("%d:%02d:%05.2f", h, m, r);
        }
        s = s.replace(',', '.');
        // 期望已是 HH:MM:SS.xx
        if (s.length() >= 10) return s;
        return "0:00:00.00";
    }
}


